#!/usr/bin/env bash

set -euo pipefail

preload_modules=(part_{gpt,msdos} lvm)

cmdline_linux_default=(
    ${INSTALL_KERNEL_QUIET:+quiet}
    loglevel="$INSTALL_KERNEL_LOGLEVEL"
    consoleblank="$INSTALL_KERNEL_CONSOLEBLANK"
)

cmdline_linux=(resume="$INSTALL_SWAP_DEVICE")

if [[ -v INSTALL_USE_LUKS ]]; then
    export GRUB_ENABLE_CRYPTODISK=y
    preload_modules+=(cryptodisk luks)
    cmdline_linux+=(
        cryptdevice=UUID="$(blkid -s UUID -o value "$INSTALL_LUKS_DEVICE"):$INSTALL_LUKS_MAPPER_NAME${INSTALL_USE_TRIM:+:allow-discards}"
        cryptkey=rootfs:"$INSTALL_LUKS_KEYFILE"
    )
else
    export GRUB_ENABLE_CRYPTODISK=n
fi

export GRUB_PRELOAD_MODULES=${preload_modules[*]}
export GRUB_CMDLINE_LINUX_DEFAULT=${cmdline_linux_default[*]}
export GRUB_CMDLINE_LINUX=${cmdline_linux[*]}

template-install /etc/default/grub

options=(--recheck)
if [[ $INSTALL_BOOT_FIRMWARE == uefi ]]; then
    options+=(--target=x86_64-efi --efi-directory="$INSTALL_UEFI_MOUNT" --bootloader-id=GRUB)
else
    options+=(--target=i386-pc)
fi

arch-chroot "$INSTALL_MOUNT" grub-install "${options[@]}" "$INSTALL_DEVICE"
arch-chroot "$INSTALL_MOUNT" grub-mkconfig --output=/boot/grub/grub.cfg
