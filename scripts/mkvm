#!/usr/bin/env bash

set -euo pipefail

self_name=${0##*/}

mem_size=4G
disk_size=20G

usage="Create a virtual machine.

Usage:
    $self_name -h|--help
    $self_name [OPTIONS] DISK_FILE

Options:
    -m SIZE    specify memory size (default: $mem_size)
    -d SIZE    specify disk size (default: $disk_size, only applies if DISK_FILE does not exist)

    -i FILE    add iso FILE as a cdrom

    -s NAME=PATH    add PATH as NAME 9p share

Arguments:
    DISK_FILE    data disk image file
"

if (($# > 0)); then
    if [[ $1 == -h || $1 == --help ]]; then
        printf "%s\n" "$usage"
        exit
    fi
fi

cdrom_opts=()
cdrom_id_next=0
cdrom_device_fmt="scsi-cd,bus=scsi0.0,drive=cdrom%d"
cdrom_drive_fmt="id=cdrom%d,if=none,format=raw,media=cdrom,read-only=on,file=%s"

while getopts "m:d:i:s:" opt; do
    case $opt in
    m) mem_size=$OPTARG ;;
    d) disk_size=$OPTARG ;;
    i)
        cdrom_id=$((cdrom_id_next++))
        cdrom_opts+=(
            -device "$(printf "$cdrom_device_fmt" "$cdrom_id")"
            -drive "$(printf "$cdrom_drive_fmt" "$cdrom_id" "$OPTARG")"
        )
        ;;
    s) opts+=(-virtfs "local,path=${OPTARG#*=},mount_tag=${OPTARG%%=*},security_model=passthrough") ;;
    *) exit 2 ;;
    esac
done
shift $((OPTIND - 1))

disk_file=${1:?missing disk file}

if [[ ! -f $disk_file ]]; then
    qemu-img create -f qcow2 "$disk_file" -o nocow=on "$disk_size"
fi

opts=()

if ((${#cdrom_opts[@]} > 0)); then
    opts+=(-boot order=d -device 'virtio-scsi-pci,id=scsi0' "${cdrom_opts[@]}")
fi

exec qemu-system-x86_64 "${opts[@]}" \
    -name "$self_name-$$" -m "$mem_size" \
    -cpu host -accel kvm -machine smm=on \
    -device vhost-vsock-pci,guest-cid=42 \
    -device virtio-net-pci,netdev=net0 \
    -netdev user,id=net0,hostfwd=tcp::60022-:22 \
    -drive format=qcow2,if=virtio,file="$disk_file"
