#!/usr/bin/env bash

set -euo pipefail

media_file=${1:?missing installation media}

hostname=testvm-$$

temp_dir=$(mktemp -d -t "$hostname".XXXXXXXXXX)
trap 'rm -rf "$temp_dir"' EXIT

data_file=$temp_dir/data.cow
cidata_file=$temp_dir/cidata.iso

env_file=$temp_dir/env
mount_file=$temp_dir/mount
install_file=$temp_dir/install

timezone=$(readlink /etc/localtime)
timezone=${timezone##*/zoneinfo/}

cat >"$env_file" <<EOF
export BOOTSTRAP_INSTALL_DEVICE=/dev/vda
export BOOTSTRAP_HOSTNAME=$hostname
export BOOTSTRAP_TIMEZONE=$timezone
export BOOTSTRAP_ADMIN_LOGIN=$USER
export BOOTSTRAP_ADMIN_GROUP_NOPASSWD=1
export BOOTSTRAP_ADMIN_USE_SSH_AUTHORIZED_KEYS=1
export BOOTSTRAP_PACKAGES="vim git rsync"
EOF

cat >"$mount_file" <<EOF
#!/usr/bin/env bash

set -euo pipefail

mkdir -p /mnt/bootstrap
mount -t 9p -o trans=virtio,version=9p2000.L,msize=262144 bootstrap /mnt/bootstrap
EOF

cat >"$install_file" <<EOF
#!/usr/bin/env bash

set -euo pipefail

source ./config/env

if [[ ! -d /mnt/bootstrap ]]; then
    ./scripts/mount
fi
cd /mnt/bootstrap

source ./scripts/prepare

./scripts/refresh
./scripts/install
EOF

cidata_dir=$temp_dir/cidata
mkdir -p "$cidata_dir"

printf "local-hostname: %s\n" "$hostname" >"$cidata_dir"/meta-data

write_files=(
    "$(jo encoding=b64 path=/root/config/env owner=root:root permissions=0600 content=%"$env_file")"
    "$(jo encoding=b64 path=/root/scripts/mount owner=root:root permissions=0755 content=%"$mount_file")"
    "$(jo encoding=b64 path=/root/scripts/install owner=root:root permissions=0755 content=%"$install_file")"
)

user_data=(
    write_files="$(jo -a "${write_files[@]}")"
    users="$(jo -a "$(jo name=root ssh_authorized_keys="$(ssh-add -L | jo -a)")")"
)

{
    printf "#cloud-config\n"
    jo "${user_data[@]}" | yq -p json
} >"$cidata_dir"/user-data

xorriso -as genisoimage -output "$cidata_file" -volid CIDATA -joliet -rock "$cidata_dir"/*

qemu-img create -f qcow2 "$data_file" -o nocow=on 20G

opts=(
    -name "$hostname" -m 4G -cpu host -accel kvm -machine smm=on -boot menu=on
    -device 'vhost-vsock-pci,guest-cid=42'
    -device 'virtio-net-pci,netdev=net0'
    -netdev 'user,id=net0,hostfwd=tcp::60022-:22'
    -drive "format=qcow2,if=virtio,file=$data_file"
)

qemu-system-x86_64 "${opts[@]}" \
    -device virtio-scsi-pci,id=scsi0 \
    -device scsi-cd,bus=scsi0.0,drive=cdrom0 \
    -drive id=cdrom0,if=none,format=raw,media=cdrom,read-only=on,file="$media_file" \
    -device scsi-cd,bus=scsi0.0,drive=cdrom1 \
    -drive id=cdrom1,if=none,format=raw,media=cdrom,read-only=on,file="$cidata_file" \
    -virtfs local,path="$PWD",mount_tag=bootstrap,security_model=passthrough

qemu-system-x86_64 "${opts[@]}"
