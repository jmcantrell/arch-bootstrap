#!/usr/bin/env bash

set -euo pipefail

media_file=${1:?missing installation media}

hostname=testvm-$$

temp_dir=$(mktemp -d -t "$hostname".XXXXXXXXXX)
trap 'rm -rf "$temp_dir"' EXIT

data_file=$temp_dir/data.cow
cidata_file=$temp_dir/cidata.iso

config_file=$temp_dir/config
install_file=$temp_dir/install

timezone=$(readlink /etc/localtime)
timezone=${timezone##*/zoneinfo/}

cat >"$config_file" <<EOF
export BOOTSTRAP_INSTALL_DEVICE=/dev/vda
export BOOTSTRAP_HOSTNAME=$hostname
export BOOTSTRAP_TIMEZONE=$timezone
export BOOTSTRAP_ADMIN_LOGIN=$USER
export BOOTSTRAP_ADMIN_GROUP_NOPASSWD=1
export BOOTSTRAP_ADMIN_USE_SSH_AUTHORIZED_KEYS=1
export BOOTSTRAP_PACKAGES="vim git rsync"
EOF

set | awk '/^BOOTSTRAP_/ { print "export " $0 }' >>"$config_file"

cat >"$install_file" <<EOF
#!/usr/bin/env bash

set -euo pipefail

source ./config

cd /mnt/bootstrap

source ./scripts/prepare

./scripts/inspect
./scripts/refresh
./scripts/install
EOF

cidata_dir=$temp_dir/cidata
mkdir -p "$cidata_dir"

printf "local-hostname: %s\n" "$hostname" >"$cidata_dir"/meta-data

cat >"$cidata_dir"/user-data <<EOF
#cloud-config
$(jo \
    write_files="$({
        jo -- path=/etc/systemd/system/reflector.service owner=root:root -s permissions=0000 content=""
        jo -- encoding=b64 path=/root/config owner=root:root -s permissions='0600' content=%"$config_file"
        jo -- encoding=b64 path=/root/install owner=root:root -s permissions='0755' content=%"$install_file"
    } | jo -a)" \
    runcmd="$(
        jo -a -- \
            "systemctl daemon-reload" \
            "mkdir -p /mnt/bootstrap && mount -t 9p -o trans=virtio,version=9p2000.L,msize=262144 bootstrap /mnt/bootstrap"
    )" \
    users="$(
        jo name=root ssh_authorized_keys="$(ssh-add -L | jo -a)" | jo -a
    )" | yq -p json)
EOF

xorriso -as genisoimage -output "$cidata_file" -volid CIDATA -joliet -rock "$cidata_dir"/*

qemu-img create -f qcow2 "$data_file" -o nocow=on 20G

opts=(
    -name "$hostname" -m 4G -cpu host -accel kvm -machine smm=on -boot menu=on
    -device 'vhost-vsock-pci,guest-cid=42'
    -device 'virtio-net-pci,netdev=net0'
    -netdev 'user,id=net0,hostfwd=tcp::60022-:22'
    -drive "format=qcow2,if=virtio,file=$data_file"
)

qemu-system-x86_64 "${opts[@]}" \
    -device virtio-scsi-pci,id=scsi0 \
    -device scsi-cd,bus=scsi0.0,drive=cdrom0 \
    -drive id=cdrom0,if=none,format=raw,media=cdrom,read-only=on,file="$media_file" \
    -device scsi-cd,bus=scsi0.0,drive=cdrom1 \
    -drive id=cdrom1,if=none,format=raw,media=cdrom,read-only=on,file="$cidata_file" \
    -virtfs local,path="$PWD",mount_tag=bootstrap,security_model=passthrough

qemu-system-x86_64 "${opts[@]}"
