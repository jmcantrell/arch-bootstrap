#!/usr/bin/env bash

set -euo pipefail

self_name=${0##*/}

usage="Test installation in a virtual machine.

Usage:
    $self_name -h|--help
    $self_name [OPTIONS] ISO_FILE

Options:
    -b    use BIOS boot firmware instead of UEFI

    -d FILE    store disk image in FILE (default: ephemeral)
    -i FILE    store cloud-init ISO in FILE (default: ephemeral)
    -u FILE    store UEFI firmware variables in FILE (default: ephemeral)

    -p PORT    forward host PORT to port 22 on the guest
               (tcp only, default: same as ./scripts/vm)

    -c ID    set guest vsock client ID
             (default: same as ./scripts/vm)

    -e    edit configuration before booting the live system

Arguments:
    ISO_FILE     installation media ISO file
"

if (($# > 0)); then
    if [[ $1 == -h || $1 == --help ]]; then
        printf "%s\n" "$usage"
        exit
    fi
fi

boot_firmware=${BOOTSTRAP_BOOT_FIRMWARE:-uefi}
unset uefi_file disk_file
vm_opts=()
mkvm_opts=()

while getopts "bd:i:u:p:c:e" opt; do
    case $opt in
    b) boot_firmware=bios ;;
    u) uefi_file=$OPTARG ;;
    d) disk_file=$OPTARG ;;
    p | c) vm_opts+=(-"$opt" "$OPTARG") ;;
    i) mkvm_opts+=(-"$opt" "$OPTARG") ;;
    e) mkvm_opts+=(-"$opt") ;;
    *) exit 2 ;;
    esac
done
shift $((OPTIND - 1))

media_file=${1:?missing media file}

temp_dir=$(mktemp -d -t "$self_name-$$".XXXXXXXXXX)
trap 'rm -rf "$temp_dir"' EXIT

if [[ $boot_firmware == uefi ]]; then
    if [[ ! -v uefi_file ]]; then
        uefi_file=$temp_dir/uefi_vars.fd
    fi
    if [[ ! -f $uefi_file ]]; then
        cp /usr/share/edk2/x64/OVMF_VARS.4m.fd "$uefi_file"
    fi
    vm_opts+=(-u "$uefi_file")
fi

if [[ ! -v disk_file ]]; then
    disk_file=$temp_dir/disk.cow
fi
if [[ ! -f $disk_file ]]; then
    qemu-img create -f qcow2 "$disk_file" -o nocow=on 20G
fi

./scripts/mkvm "${vm_opts[@]}" "${mkvm_opts[@]}" "$media_file" "$disk_file"

./scripts/vm "${vm_opts[@]}" "$disk_file"
