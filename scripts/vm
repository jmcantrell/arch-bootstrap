#!/usr/bin/env bash

set -euo pipefail

self_name=${0##*/}

mem_size=4G
host_port=60022
vsock_id=42

usage="Run a virtual machine.

Usage:
    $self_name -h|--help
    $self_name [OPTIONS] DISK_FILE

Options:
    -m SIZE    specify memory size (default: $mem_size)

    -i FILE         add iso FILE as a cdrom
    -s NAME=PATH    add PATH as NAME 9p share

    -p PORT    forward host PORT to port 22 on the guest
               (tcp only, default: $host_port)

    -c ID    set guest vsock client ID
             (default: $vsock_id)

Arguments:
    DISK_FILE    data disk image file
"

if (($# > 0)); then
    if [[ $1 == -h || $1 == --help ]]; then
        printf "%s\n" "$usage"
        exit
    fi
fi

opts=()
unset boot_order_arg
cdrom_id_next=0
cdrom_device_fmt="scsi-cd,bus=scsi0.0,drive=cdrom%d"
cdrom_drive_fmt="id=cdrom%d,if=none,format=raw,media=cdrom,read-only=on,file=%s"

while getopts "m:d:i:s:p:" opt; do
    case $opt in
    m) mem_size=$OPTARG ;;
    i)
        boot_order_arg=d
        cdrom_id=$((cdrom_id_next++))
        opts+=(
            -device "$(printf "$cdrom_device_fmt" "$cdrom_id")"
            -drive "$(printf "$cdrom_drive_fmt" "$cdrom_id" "$OPTARG")"
        )
        ;;
    s) opts+=(-virtfs "local,path=${OPTARG#*=},mount_tag=${OPTARG%%=*},security_model=passthrough") ;;
    p) host_port=$OPTARG ;;
    *) exit 2 ;;
    esac
done
shift $((OPTIND - 1))

disk_file=${1:?missing disk file}

exec qemu-system-x86_64 \
    -name "$self_name-$$" -m "$mem_size" \
    -cpu host -accel kvm -machine smm=on \
    ${boot_order_arg:+-boot order="$boot_order_arg"} \
    -device virtio-scsi-pci,id=scsi0 \
    -device vhost-vsock-pci,guest-cid="$vsock_id" \
    -device virtio-net-pci,netdev=net0 \
    -netdev user,id=net0,hostfwd=tcp::"$host_port"-:22 \
    -device scsi-hd,bus=scsi0.0,drive=disk0 \
    -drive file="$disk_file",id=disk0,if=none,discard=unmap \
    "${opts[@]}"
